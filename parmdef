#!/bin/env python

##################################################################################################
#  Name:        parmdef                                                                          #
#  Author:      Randy Johnson                                                                    #
#  Description: Prints a report instance parameter definitions.                                  #
#                                                                                                #
#  Usage: parmdef [options]                                                                      #
#                                                                                                #
#  Options:                                                                                      #
#    -h, --help  show this help message and exit                                                 #
#    -n NAME     where name like ...                                                             #
#    -s          print SQL query.                                                                #
#    -v          print version info.                                                             #
#                                                                                                #
# History:                                                                                       #
#                                                                                                #
# Date       Ver. Who              Change Description                                            #
# ---------- ---- ---------------- ------------------------------------------------------------- #
# 04/13/2012 1.00 Randy Johnson    Initial write.                                                #
# 05/14/2014 1.20 Randy Johnson    Fixed filter for "mysession". Added -s option.                #
# 04/23/2015 1.30 Randy Johnson    Updated print statements for Python 3.4 compatibility. This   #
#                                  is most commonly changes to the print() and join() functions. #
#                                  Changed the SQL to use Sqlplus headings instead of printing   #
#                                  them myself.                                                  #
# 07/17/2015 2.00 Randy Johnson    Updated for Python 2.4-3.4 compatibility.                     #
# 07/17/2015 2.20 Randy Johnson    Added prompts for username, password, tnsname.                #
##################################################################################################

# --------------------------------------
# ---- Import Python Modules -----------
# --------------------------------------
from optparse     import OptionParser
from os           import environ
from os.path      import basename
from signal       import SIG_DFL
from signal       import SIGPIPE
from signal       import signal
from sys          import argv
from sys          import exit
from sys          import version_info
from Oracle       import ParseConnectString
from Oracle       import RunSqlplus
from Oracle       import SetOracleEnv


# --------------------------------------
# ---- Main Program --------------------
# --------------------------------------
if (__name__ == '__main__'):
  Cmd            = basename(argv[0]).split('.')[0]
  CmdDesc        = 'Parameter Definition'
  Version        = '2.20'
  VersionDate    = 'Tue Sep 15 21:02:11 CDT 2015'
  DevState       = 'Production'
  Banner         = CmdDesc + ': Release ' + Version + ' '  + DevState + '. Last updated: ' + VersionDate
  Sql            = ''
  SqlHeader      = '/***** ' + CmdDesc.upper() + ' *****/'
  ErrChk         = False
  ArgParser      = OptionParser()
  InStr          = ''
  TnsName        = ''
  Username       = ''
  Password       = ''
  ConnStr        = ''
  InstList       = []
  

  # For handling termination in stdout pipe; ex: when you run: oerrdump | head
  signal(SIGPIPE, SIG_DFL)

  ArgParser.add_option('-n',  dest='Name',                            default='',    type=str, help="where name like ...")
  ArgParser.add_option('--s', dest='Show',       action='store_true', default=False,                 help="print SQL query.")
  ArgParser.add_option('--v', dest='ShowVer',    action='store_true', default=False,                 help="print version info.")
  
  # Parse command line arguments
  Options, args = ArgParser.parse_args()

  Name      = Options.Name
  Show      = Options.Show
  ShowVer   = Options.ShowVer
  
  if (ShowVer):
    print('\n%s' % Banner)
    exit()
    
  Sql += "col name         format a50 heading 'Name'\n"
  Sql += "col value        format a30 heading 'Value'\n"
  Sql += "col description  format a90 heading 'Description'\n"
  Sql += "col bytes format 9999999999999999999\n"
  Sql += "\n"
  Sql += "  SELECT " + SqlHeader + "\n"
  Sql += "         name\n"
  Sql += "       , value\n"
  Sql += "       , description\n"
  if (Name != ''):
    Sql += "    FROM v$parameter\n"
    Sql += "   WHERE UPPER(name) LIKE '%" + Name.upper() + "%'\n"
  else:
    Sql += "    FROM v$parameter\n"
  Sql += "ORDER BY name\n"
  Sql += "       , value\n"
  Sql += "       , description;"


  Sql = Sql.strip()

  if(Show):
    print('-----------cut-----------cut-----------cut-----------cut-----------cut-----------')
    print(Sql)
    print('-----------cut-----------cut-----------cut-----------cut-----------cut-----------')
    exit()

  # Check/setup the Oracle environment
  if (not('ORACLE_SID' in list(environ.keys()))):
    print('ORACLE_SID is required.')
    exit(1)
  else:
    # Set the ORACLE_HOME just in case it isn't set already.
    if (not('ORACLE_HOME' in list(environ.keys()))):
      (OracleSid, OracleHome) = SetOracleEnv(environ['ORACLE_SID'])

  # Parse the connect string if any, prompt for username, password if needed.
  if (len(args) > 0 and Show == False):
    InStr = args[0]
    ConnStr = ParseConnectString(InStr)

  # Execute the report
  if (ConnStr != ''):
    (Stdout) = RunSqlplus(Sql, ErrChk, ConnStr)
  else:
    (Stdout) = RunSqlplus(Sql, ErrChk)

  # Print the report
  if (Stdout != ''):
    print('\n%s' % Stdout)

  exit(0)
# --------------------------------------
# ---- End Main Program ----------------
# --------------------------------------
