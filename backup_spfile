#!/bin/env python

##################################################################################################
# Name:        backup_controlfile                                                                #
# Author:      Randy Johnson                                                                     #
# Description: create pfile = {} from spfile;                                                    #
#                                                                                                #
# Usage: backup_spfile [options]                                                                 #
#                                                                                                #
# Options:                                                                                       #
#   -h, --help  show this help message and exit                                                  #
#   -f PFILE    name of the backup file.                                                         #
#   --s         print SQL query.                                                                 #
#   --v         print version info.                                                              #
#                                                                                                #
# History:                                                                                       #
#                                                                                                #
# Date       Ver. Who              Change Description                                            #
# ---------- ---- ---------------- ------------------------------------------------------------- #
# 10/09/2015 1.00 Randy Johnson    Initial write.                                                #
# 10/22/2015 1.10 Randy Johnson    Minor non-functional changes.                                 #
##################################################################################################

# --------------------------------------
# ---- Import Python Modules -----------
# --------------------------------------
from datetime     import datetime
from optparse     import OptionParser
from os           import environ
from os.path      import basename
from os.path      import join as pathjoin
from sys          import argv
from sys          import exit
from sys          import version_info
from signal       import SIGPIPE
from signal       import SIG_DFL
from signal       import signal
from Oracle       import RunSqlplus
from Oracle       import SetOracleEnv
from Oracle       import ParseConnectString
from Oracle       import PrintError


# --------------------------------------
# ---- Main Program --------------------
# --------------------------------------
if (__name__ == '__main__'):
  Cmd            = basename(argv[0]).split('.')[0]
  CmdDesc        = 'Backup spfile to pfile'
  Version        = '1.10'
  VersionDate    = 'Thu Oct 22 10:05:37 CDT 2015'
  DevState       = 'Production'
  Banner         = CmdDesc + ': Release ' + Version + ' '  + DevState + '. Last updated: ' + VersionDate
  Sql            = ''
  SqlHeader      = '/***** ' + CmdDesc.upper() + ' *****/'
  ErrChk         = False
  ArgParser      = OptionParser()
  InStr          = ''
  ConnStr        = ''
  Now            = datetime.now()
  Timestamp      = Now.strftime("%Y%m%d.%H%M%S")
    
  # For handling termination in stdout pipe; ex: when you run: oerrdump | head
  signal(SIGPIPE, SIG_DFL)

  ArgParser.add_option("-f",  dest="Pfile",                        default='',    type=str, help="name of the backup file.")
  ArgParser.add_option('--s', dest='Show',    action='store_true', default=False,           help="print SQL query.")
  ArgParser.add_option('--v', dest='ShowVer', action='store_true', default=False,           help="print version info.")
  
  # Parse command line arguments
  Options, args = ArgParser.parse_args()

  Pfile     = Options.Pfile
  Show      = Options.Show
  ShowVer   = Options.ShowVer
  
  if (ShowVer):
    print('\n%s' % Banner)
    exit()

  if (Pfile == ''):
    if(environ['ORACLE_SID'] != ''):
      Pfile = pathjoin('/', 'tmp', 'init' + environ['ORACLE_SID'] + '.' + Timestamp + '.ora')
    else:
      Pfile = pathjoin('/', 'tmp', 'init' + '.' + Timestamp + '.ora')

  # Formulate the backup command...
  Sql += SqlHeader + "\n"
  Sql += "create pfile='" + Pfile + "' from spfile;"

  if(Show):
    print('\n-----------cut-----------cut-----------cut-----------cut-----------cut-----------')
    print(Sql)
    print('-----------cut-----------cut-----------cut-----------cut-----------cut-----------')
    exit()

  # Check/setup the Oracle environment
  if (not('ORACLE_SID' in list(environ.keys()))):
    print('ORACLE_SID is required.')
    exit(1)
  else:
    # Set the ORACLE_HOME just in case it isn't set already.
    if (not('ORACLE_HOME' in list(environ.keys()))):
      (OracleSid, OracleHome) = SetOracleEnv(environ['ORACLE_SID'])

  # Parse the connect string if any, prompt for username, password if needed.
  if (len(args) > 0 and not Show):
    InStr = args[0]
    ConnStr = ParseConnectString(InStr)

  print("\nCreating backup pfile: %s" % Pfile)

  # Execute
  if (ConnStr != ''):
    (Stdout) = RunSqlplus(Sql, ErrChk, ConnStr)
  else:
    (Stdout) = RunSqlplus(Sql, ErrChk)

  Stdout = Stdout.strip()

  # Print the report
  if (Stdout != ''):
    print('\n%s' % Stdout)

  exit(0)
# --------------------------------------
# ---- End Main Program ----------------
# --------------------------------------
