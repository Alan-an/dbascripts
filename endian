#!/bin/env python

##################################################################################################
# Name:        endian                                                                            #
# Author:      Randy Johnson                                                                     #
# Description: Prints contents of the V$TRANSPORTABLE_PLATFORM view.                             #
# Usage: endian [options]                                                                         #
#                                                                                                #
# Options:                                                                                       #
#   -h, --help  show this help message and exit                                                  #
#   -c          include property comments                                                        #
#   -s          print SQL query                                                                  #
#   -v          print version info.                                                              #
#                                                                                                #
# History:                                                                                       #
#                                                                                                #
# Date       Ver. Who              Change Description                                            #
# ---------- ---- ---------------- ------------------------------------------------------------- #
# 03/06/2015 1.00 Randy Johnson    Initial write.                                                #
# 04/23/2015 1.30 Randy Johnson    Updated print statements for Python 3.4 compatibility. This   #
#                                  is most commonly changes to the print() and join() functions. #
# 08/13/2015 3.00 Randy Johnson    Added prompts for username, password, tnsname.                #
##################################################################################################

# --------------------------------------
# ---- Import Python Modules -----------
# --------------------------------------
from optparse     import OptionParser
from os           import environ
from os.path      import basename
from signal       import SIG_DFL
from signal       import SIGPIPE
from signal       import signal
from sys          import argv
from sys          import exit
from sys          import version_info
from Oracle       import ParseConnectString
from Oracle       import RunSqlplus
from Oracle       import SetOracleEnv


# --------------------------------------
# ---- Main Program --------------------
# --------------------------------------
if (__name__ == '__main__'):
  Cmd            = basename(argv[0]).split('.')[0]
  CmdDesc        = 'Endian'
  Version        = '1.00'
  VersionDate    = 'Tue Feb 14 14:52:05 CST 2017'
  DevState       = 'Production'
  Banner         = CmdDesc + ': Release ' + Version + ' '  + DevState + '. Last updated: ' + VersionDate
  Sql            = ''
  SqlHeader      = '/***** ' + CmdDesc.upper() + ' *****/'
  ErrChk         = False
  ArgParser      = OptionParser()
  InStr          = ''
  TnsName        = ''
  Username       = ''
  Password       = ''
  ConnStr        = ''
  

  # For handling termination in stdout pipe; ex: when you run: oerrdump | head
  signal(SIGPIPE, SIG_DFL)

  ArgParser.add_option("-p",  dest="Platform",                      default='',    type=str, help="where upper(platform_name) like upper(%...%)")
  ArgParser.add_option('--s', dest='Show',     action='store_true', default=False,           help="print SQL query.")
  ArgParser.add_option('--v', dest='ShowVer',  action='store_true', default=False,           help="print version info.")

  # Parse command line arguments
  Options, args = ArgParser.parse_args()

  Platform  = Options.Platform
  Show      = Options.Show
  ShowVer   = Options.ShowVer

  if (ShowVer):
    print('\n%s' % Banner)
    exit()

  Sql += "column platform_id    format a5    heading 'ID'\n"
  Sql += "column platform_name  format a50   heading 'Platform'\n"
  Sql += "column endian_format  format a10   heading 'Endian'\n"
  Sql += "\n"
  Sql += "  SELECT " + SqlHeader + "\n"
  Sql += "         to_char(platform_id) platform_id\n"
  Sql += "       , platform_name\n"
  Sql += "       , endian_format\n"
  Sql += "    FROM v$transportable_platform\n"
  if (Platform != ''):
    Sql += "   WHERE upper(platform_name) LIKE UPPER('%" + Platform + "%')\n"
  Sql += "ORDER BY to_number(platform_id);"

  Sql = Sql.strip()

  if(Show):
    print('-----------cut-----------cut-----------cut-----------cut-----------cut-----------')
    print(Sql)
    print('-----------cut-----------cut-----------cut-----------cut-----------cut-----------')
    exit()

  # Check/setup the Oracle environment
  if (not('ORACLE_SID' in list(environ.keys()))):
    print('ORACLE_SID is required.')
    exit(1)
  else:
    # Set the ORACLE_HOME just in case it isn't set already.
    if (not('ORACLE_HOME' in list(environ.keys()))):
      (OracleSid, OracleHome) = SetOracleEnv(environ['ORACLE_SID'])

  # Parse the connect string if any, prompt for username, password if needed.
  if (len(args) > 0 and Show == False):
    InStr = args[0]
    ConnStr = ParseConnectString(InStr)

  # Execute the report
  if (ConnStr != ''):
    (Stdout) = RunSqlplus(Sql, ErrChk, ConnStr)
  else:
    (Stdout) = RunSqlplus(Sql, ErrChk)

  # Print the report
  if (Stdout != ''):
    print('\n%s' % Stdout)

  exit(0)
# --------------------------------------
# ---- End Main Program ----------------
# --------------------------------------
